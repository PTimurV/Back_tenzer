"""Масштабное обновление бд

Revision ID: 188cc9146f3d
Revises: 0ce2567de969
Create Date: 2024-05-25 14:55:12.661762

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '188cc9146f3d'
down_revision: Union[str, None] = '0ce2567de969'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('interests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_friends',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('friend_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['friend_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'friend_id')
    )
    op.create_table('user_interests',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('interest_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['interest_id'], ['interests.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'interest_id')
    )
    op.create_table('place_travel_comments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('place_travel_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['place_travel_id'], ['places.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('places_feedback',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('place_id', sa.Integer(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['place_id'], ['places.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('places_photo',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('place_id', sa.Integer(), nullable=True),
    sa.Column('file', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['place_id'], ['places.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_travels',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('owner_user_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('img', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('travel_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['travel_id'], ['travels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_travels_members',
    sa.Column('users_travel_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['users_travel_id'], ['users_travels.id'], ),
    sa.PrimaryKeyConstraint('users_travel_id', 'user_id')
    )
    op.add_column('places', sa.Column('creator_user_id', sa.Integer(), nullable=True))
    op.add_column('places', sa.Column('title', sa.String(), nullable=True))
    op.add_column('places', sa.Column('description', sa.String(), nullable=True))
    op.add_column('places', sa.Column('coordinates', sa.String(), nullable=True))
    op.add_column('places', sa.Column('status', sa.String(), nullable=True))
    op.drop_constraint('places_travel_id_fkey', 'places', type_='foreignkey')
    op.create_foreign_key(None, 'places', 'users', ['creator_user_id'], ['id'])
    op.drop_column('places', 'travel_id')
    op.drop_column('places', 'name')
    op.add_column('travels', sa.Column('user_id', sa.Integer(), nullable=True))
    op.add_column('travels', sa.Column('title', sa.String(), nullable=True))
    op.add_column('travels', sa.Column('mean_score', sa.Float(), nullable=True))
    op.add_column('travels', sa.Column('img', sa.String(), nullable=True))
    op.add_column('travels', sa.Column('status', sa.String(), nullable=True))
    op.add_column('travels', sa.Column('count_users', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'travels', 'users', ['user_id'], ['id'])
    op.drop_column('travels', 'name')
    op.add_column('users', sa.Column('img', sa.String(), nullable=True))
    op.add_column('users', sa.Column('name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('surname', sa.String(), nullable=True))
    op.add_column('users', sa.Column('role', sa.String(), nullable=True))
    op.add_column('users', sa.Column('gender', sa.String(), nullable=True))
    op.add_column('users', sa.Column('birthday', sa.Date(), nullable=True))
    op.add_column('users', sa.Column('username', sa.String(), nullable=True))
    op.add_column('users', sa.Column('city', sa.String(), nullable=True))
    op.drop_index('ix_users_login', table_name='users')
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.drop_column('users', 'password')
    op.drop_column('users', 'login')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('login', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.create_index('ix_users_login', 'users', ['login'], unique=True)
    op.drop_column('users', 'city')
    op.drop_column('users', 'username')
    op.drop_column('users', 'birthday')
    op.drop_column('users', 'gender')
    op.drop_column('users', 'role')
    op.drop_column('users', 'surname')
    op.drop_column('users', 'name')
    op.drop_column('users', 'img')
    op.add_column('travels', sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'travels', type_='foreignkey')
    op.drop_column('travels', 'count_users')
    op.drop_column('travels', 'status')
    op.drop_column('travels', 'img')
    op.drop_column('travels', 'mean_score')
    op.drop_column('travels', 'title')
    op.drop_column('travels', 'user_id')
    op.add_column('places', sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('places', sa.Column('travel_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'places', type_='foreignkey')
    op.create_foreign_key('places_travel_id_fkey', 'places', 'travels', ['travel_id'], ['id'])
    op.drop_column('places', 'status')
    op.drop_column('places', 'coordinates')
    op.drop_column('places', 'description')
    op.drop_column('places', 'title')
    op.drop_column('places', 'creator_user_id')
    op.drop_table('user_travels_members')
    op.drop_table('users_travels')
    op.drop_table('places_photo')
    op.drop_table('places_feedback')
    op.drop_table('place_travel_comments')
    op.drop_table('user_interests')
    op.drop_table('user_friends')
    op.drop_table('interests')
    # ### end Alembic commands ###
